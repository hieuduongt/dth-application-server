@page "/all-users"
@inject IUserServices userServices
<h3>List Users</h3>

@if (Loading)
{
    <p><em>Loading...</em></p>
}
else if(userServices.ResponseMessage == "" && (userServices.Users.Results != null || userServices.Users.Results.Count != 0))
{
    <div class="table-responsive">
        <table class="table table-striped mt-4">
            <thead>
                <tr>
                    <th scope="col">Avatar</th>
                    <th scope="col">Name</th>
                    <th scope="col">Login Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Gender</th>
                    <th scope="col">Account Status</th>
                    <th scope="col">Role</th>
                    <th scope="col">Phone Number</th>
                    <th scope="col">Address</th>
                    <th scope="col">Date Of Birth</th>
                    <th scope="col">Created Date</th>
                    <th scope="col">Updated Date</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in userServices.Users.Results)
                {
                    <tr>
                        <td>
                            <div class="product-image">
                                <img src="@user.ProfileImages.Find(i => i.IsMainImage == true)?.URL" class="thumb-image" />
                            </div>
                        </td>
                        <td class="align-middle">@user.UserName</td>
                        <td class="align-middle">@user.LoginName</td>
                        <td class="align-middle">@user.Email</td>
                        <td class="align-middle">@user.Gender</td>
                        <td class="align-middle">
                            <select @bind="@user.Role" class="form-select" aria-label="Default select example">
                                @foreach (Role role in (Role[]) Enum.GetValues(typeof(Role)))
                                {
                                    <option selected="@(@user.Role == role)" value="@role">@role</option>
                                }
                            </select>
                        </td>
                        <td class="align-middle">
                            <select @bind="@user.AccountStatus" class="form-select" aria-label="Default select example">
                                @foreach (AccountStatus status in (AccountStatus[]) Enum.GetValues(typeof(AccountStatus)))
                                {
                                    <option selected="@(@user.AccountStatus == status)" value="@status">@status</option>
                                }
                            </select>
                        </td>
                        <td class="align-middle">@user.PhoneNumber</td>
                        <td class="align-middle">@user.Address</td>
                        <td class="align-middle">@user.DateOfBirth</td>
                        <td class="align-middle">@user.CreatedDate</td>
                        <td class="align-middle">@user.UpdatedDate</td>
                        <td class="align-middle">
                            <button class="btn btn-primary" @onclick="@(() => HandleSave(user))">Save</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
} else {
    <div class="text-danger">
        @userServices.ResponseMessage
    </div>
}

@code {
    private string Message {get; set;} = string.Empty;
    private bool Loading {get; set;} = false;
    protected override async Task OnInitializedAsync()
    {
        Loading = true;
        await userServices.GetAllAsync();
        Loading = false;
    }

    private void HandleSave(User user) {
        userServices.UpdateAsync(user);
    }
}
